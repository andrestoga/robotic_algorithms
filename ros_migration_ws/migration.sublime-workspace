{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pr",
				"print"
			],
			[
				"co",
				"cost_"
			],
			[
				"a",
				"auto"
			],
			[
				"clo",
				"closed_"
			],
			[
				"be",
				"beginend\t$1.begin(), $1.end()"
			],
			[
				"ope",
				"open_"
			],
			[
				"C",
				"CellDijk"
			],
			[
				"pa",
				"parent_"
			],
			[
				"D",
				"Dijkstra"
			],
			[
				"com",
				"compare"
			],
			[
				"cos",
				"cost_to_come_"
			],
			[
				"for",
				"for\tFor Loop"
			],
			[
				"crea",
				"createPose2D"
			],
			[
				"RO",
				"ROS_INFO_STREAM"
			],
			[
				"pri",
				"print_cell"
			],
			[
				"hei",
				"height_"
			],
			[
				"wi",
				"width_"
			],
			[
				"g_va",
				"g_valid_image_content"
			],
			[
				"pla",
				"planner"
			],
			[
				"Ex",
				"EXPECT_EQ"
			],
			[
				"plan",
				"plan1"
			],
			[
				"in",
				"inc\t#include <…>"
			],
			[
				"path",
				"pathPlanning"
			],
			[
				"map",
				"map_resp"
			],
			[
				"me",
				"measurement_prob"
			],
			[
				"is",
				"is_server_map"
			],
			[
				"Cons",
				"ConstPtr"
			],
			[
				"na",
				"nav_msgs"
			],
			[
				"nh",
				"nh_"
			],
			[
				"tmp",
				"tmp_cell"
			],
			[
				"occ",
				"occupied_thresh_"
			],
			[
				"fre",
				"free_thresh"
			],
			[
				"ocu",
				"occupied_thresh"
			],
			[
				"oc",
				"occupied_thresh_"
			],
			[
				"sta",
				"start_cell"
			],
			[
				"gri",
				"grid_"
			],
			[
				"n",
				"nh_"
			],
			[
				"ag",
				"agent_update_pose_client_"
			],
			[
				"prin",
				"print2DPose"
			],
			[
				"P",
				"Pose2D"
			],
			[
				"the",
				"theta"
			],
			[
				"mea",
				"measurements"
			],
			[
				"star",
				"start_pose_"
			],
			[
				"ROS_",
				"ROS_DEBUG"
			],
			[
				"va",
				"var2"
			],
			[
				"va1",
				"var1"
			],
			[
				"new",
				"new_sigma"
			],
			[
				"r",
				"r2"
			],
			[
				"m",
				"mu"
			],
			[
				"te",
				"testAgentPoseGoal"
			],
			[
				"T",
				"TEST_F"
			],
			[
				"p",
				"pMiss"
			],
			[
				"col",
				"colors"
			],
			[
				"se",
				"sensor_right"
			],
			[
				"height",
				"height_"
			],
			[
				"he",
				"height"
			],
			[
				"pos",
				"pose"
			],
			[
				"mo",
				"motions"
			],
			[
				"mov",
				"move"
			],
			[
				"sen",
				"sense"
			],
			[
				"ma",
				"map_"
			],
			[
				"q",
				"q_prob"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"po",
				"pose_"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#  \n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n#  \n#      http://www.apache.org/licenses/LICENSE-2.0\n#  \n# or in the \"license\" file accompanying this file. This file is distributed \n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n# express or implied. See the License for the specific language governing \n# permissions and limitations under the License.\n\nDEFAULT_IMAGE = \"osrf/ros2\"\n# DEFAULT_TAG = \"bouncy-ros-base\"\nDEFAULT_TAG = \"dashing-ros-base\"\nDEFAULT_BUILD_TAG = \"ros2_migration\"\nDEFAULT_ROS1_VERSION = \"melodic\"\n",
			"file": "ros2-migration-tools/ros2_migration/docker_setup/constants.py",
			"file_size": 751,
			"file_write_time": 132047789117577007,
			"settings":
			{
				"buffer_size": 751,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n## Should include ROS2 installation\nFROM osrf/ros2:dashing-ros-base\n\n## Required for tooling\nRUN pip3 install parse-cmake click docker\n\n\n##Install ROS1\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update\nRUN apt-get install ros-melodic-ros-base -y\nRUN rosdep init && rosdep update\nRUN apt-get install curl -y\n\n\nRUN pip3 install -U colcon-common-extensions\n\n\n\n\n\nCMD /bin/bash\n",
			"file": "ros2-migration-tools/ros2_migration/docker_setup/assets/Dockerfile",
			"file_size": 583,
			"file_write_time": 132047782696452802,
			"settings":
			{
				"buffer_size": 583,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"todo",
				"TodoReview: Project Files"
			],
			[
				"TODO",
				"TodoReview: Project Files"
			],
			[
				"to",
				"TodoReview: Project and Open Files"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"pytho",
				"Set Syntax: Python"
			],
			[
				"python",
				"Set Syntax: Python"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/ros2-migration-tools",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/ros2-migration-tools/ros2_migration",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/ros2-migration-tools/ros2_migration/docker_setup",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/ros2-migration-tools/ros2_migration/docker_setup/assets",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/src",
		"/home/andrestoga/Dropbox/ros/robotic_algorithms/ros_migration_ws/src/multi_agent_plan"
	],
	"file_history":
	[
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/map.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/package.xml",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/det_planner_2d.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/test/ros_testing_agent_planner.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/CMakeLists.txt",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/test/ros_testing_agent_planner.launch",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/Dijkstra.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/launch/test.launch",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/test/test_multi_agent_plan.cpp",
		"/home/andrestoga/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/andrestoga/.config/sublime-text-3/Packages/User/FileHeader.sublime-settings",
		"/home/andrestoga/.config/sublime-text-3/Packages/User/SublimeTmpl.sublime-settings",
		"/home/andrestoga/.config/sublime-text-3/Packages/User/SublimeTmpl/Default.sublime-commands",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/cell_dfs.h",
		"/home/andrestoga/Dropbox/udacity_robotics/kalman_matrices.py",
		"/home/andrestoga/Dropbox/udacity_robotics/kalman_filter_2d.py",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/agent_node.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/cell.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/planner_node.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/planner_node_app.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/agent_node_app.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/planner_2d.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/manhattan_planner.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/agent.cpp",
		"/home/andrestoga/Dropbox/udacity_robotics/test.py",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/dfs.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/manhattan_planner.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/agent.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/agent_node.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/dfs.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/map.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/planner_node.cpp",
		"/home/andrestoga/Dropbox/udacity_robotics/localization_program.py",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/build/test_results/multi_agent_plan/MISSING-rostest-test_ros_testing_agent_planner.xml",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/srv/Set2DPose.srv",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/srv/SetAgnPose.srv",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/map.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/cell_bfs.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/src/bfs.cpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/bfs.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/manhattan_planner.hpp",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/det_plan_2d.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/map_bfs.h",
		"/home/andrestoga/Dropbox/ros/take_home_robotics_coding_test/multi_agent_planning/src/multi_agent_plan/include/multi_agent_plan/planner_2d.hpp"
	],
	"find":
	{
		"height": 54.0
	},
	"find_in_files":
	{
		"height": 172.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"DEFAULT_TAG"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ros2-migration-tools/ros2_migration/docker_setup/constants.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ros2-migration-tools/ros2_migration/docker_setup/assets/Dockerfile",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 583,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/python2.sublime-build",
	"project": "migration.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cm",
				"CMakeLists.txt"
			],
			[
				"cell",
				"include/multi_agent_plan/cell.h"
			],
			[
				"dfs",
				"include/multi_agent_plan/dfs.h"
			],
			[
				"pack",
				"package.xml"
			],
			[
				"cmak",
				"CMakeLists.txt"
			],
			[
				"",
				"include/multi_agent_plan/dfs.h"
			],
			[
				"det",
				"include/multi_agent_plan/det_planner_2d.h"
			],
			[
				"map",
				"include/multi_agent_plan/map.h"
			],
			[
				"cel",
				"include/multi_agent_plan/cell.h"
			],
			[
				"de",
				"include/multi_agent_plan/det_planner_2d.h"
			],
			[
				"agen",
				"src/agent_node_app.cpp"
			],
			[
				"pla",
				"src/planner_node_app.cpp"
			],
			[
				"a",
				"src/agent_node.cpp"
			],
			[
				"test",
				"launch/test.launch"
			],
			[
				"ag",
				"src/agent_node.cpp"
			],
			[
				"p",
				"include/multi_agent_plan/planner_node.h"
			],
			[
				"agent",
				"src/agent_node.cpp"
			],
			[
				"laun",
				"launch/test.launch"
			],
			[
				"planner",
				"src/planner_node.cpp"
			],
			[
				"loc",
				"~/Dropbox/udacity_robotics/localization_program.py"
			],
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"man",
				"include/multi_agent_plan/manhattan_planner.h"
			],
			[
				"c",
				"CMakeLists.txt"
			],
			[
				"plann",
				"include/multi_agent_plan/planner_node.h"
			],
			[
				"age",
				"src/agent.cpp"
			],
			[
				"plan",
				"include/multi_agent_plan/planner_2d.h"
			],
			[
				"df",
				"include/multi_agent_plan/dfs.h"
			],
			[
				"ma",
				"include/multi_agent_plan/map.h"
			],
			[
				"m",
				"src/map.cpp"
			],
			[
				"manha",
				"include/multi_agent_plan/manhattan_planner.h"
			],
			[
				"ce",
				"include/multi_agent_plan/cell.h"
			],
			[
				"bfs",
				"src/bfs.cpp"
			],
			[
				"P",
				"include/multi_agent_plan/planner_2d.h"
			],
			[
				"b",
				"src/bfs.cpp"
			],
			[
				"bf",
				"src/bfs.cpp"
			],
			[
				"pl",
				"src/planner_node.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/ros/robotic_algorithms/path_finding/path_finding.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
